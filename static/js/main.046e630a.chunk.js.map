{"version":3,"sources":["components/PostsList/PostsList.tsx","components/NewCommentForm/NewCommentForm.tsx","api/api.ts","api/comments.ts","components/PostDetails/PostDetails.tsx","api/posts.ts","App.tsx","index.tsx"],"names":["PostsList","posts","selectedPostId","onSelectedPostId","className","map","post","userId","body","type","onClick","id","NewCommentForm","addComment","useState","name","setName","email","setEmail","setBody","onSubmit","event","preventDefault","placeholder","required","value","onChange","target","request","url","options","fetch","then","response","ok","json","Promise","reject","Error","getPosts","getPostComments","postId","comments","filter","comment","PostDetails","postDetails","setPostDetails","setComments","visibleComments","setVisibleComments","useEffect","postDetailsId","commentsPostId","deleteCommentId","commentId","method","deleteComment","currentCommets","currentState","length","headers","JSON","stringify","createComment","createdComment","App","setPosts","selectedUser","setSelectedUser","setselectedPostId","allPosts","userPosts","htmlFor","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.046e630a.chunk.js","sourcesContent":["import React from 'react';\nimport './PostsList.scss';\n\ntype Props = {\n  posts: Post[],\n  selectedPostId: number,\n  onSelectedPostId: (selectedId: number) => void;\n};\n\nexport const PostsList: React.FC<Props> = ({ posts, selectedPostId, onSelectedPostId }) => (\n  <div className=\"PostsList\">\n    <h2>Posts:</h2>\n\n    <ul className=\"PostsList__list\">\n      { posts.map(post => (\n        <li className=\"PostsList__item\" key={post.id}>\n          <div>\n            <b>\n              [User #\n              {post.userId}\n              ]:\n            </b>\n            {post.body}\n          </div>\n          <button\n            type=\"button\"\n            className=\"PostsList__button button\"\n            onClick={() => onSelectedPostId(post.id)}\n          >\n            { selectedPostId === post.id ? 'Close' : 'Open' }\n          </button>\n        </li>\n      ))}\n    </ul>\n  </div>\n);\n","import React, { useState } from 'react';\nimport './NewCommentForm.scss';\n\ntype Props = {\n  addComment: (\n    name: string, email: string, body: string\n  ) => void;\n};\n\nexport const NewCommentForm: React.FC<Props> = ({ addComment }) => {\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [body, setBody] = useState('');\n\n  const handleChangeName = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setName(event.target.value);\n  };\n\n  const handleChangeEmail = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setEmail(event.target.value);\n  };\n\n  const handleChangeBody = (event: React.ChangeEvent<HTMLTextAreaElement>) => {\n    setBody(event.target.value);\n  };\n\n  const clearForm = () => {\n    setName('');\n    setEmail('');\n    setBody('');\n  };\n\n  const handleSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    if (name && email && body) {\n      addComment(name, email, body);\n    }\n\n    clearForm();\n  };\n\n  return (\n    <form\n      className=\"NewCommentForm\"\n      onSubmit={handleSubmit}\n    >\n      <div className=\"form-field\">\n        <input\n          type=\"text\"\n          name=\"name\"\n          placeholder=\"Your name\"\n          className=\"NewCommentForm__input\"\n          required\n          value={name}\n          onChange={handleChangeName}\n        />\n      </div>\n\n      <div className=\"form-field\">\n        <input\n          type=\"text\"\n          name=\"email\"\n          placeholder=\"Your email\"\n          className=\"NewCommentForm__input\"\n          required\n          value={email}\n          onChange={handleChangeEmail}\n        />\n      </div>\n\n      <div className=\"form-field\">\n        <textarea\n          name=\"body\"\n          placeholder=\"Type comment here\"\n          className=\"NewCommentForm__input\"\n          required\n          value={body}\n          onChange={handleChangeBody}\n        />\n      </div>\n\n      <button\n        type=\"submit\"\n        className=\"NewCommentForm__submit-button button\"\n      >\n        Add a comment\n      </button>\n    </form>\n  );\n};\n","export const BASE_URL = 'https://mate.academy/students-api';\n\nexport const request = (url: string, options?: {}) => {\n  return fetch(`${BASE_URL}${url}`, options)\n    .then(response => {\n      if (!response.ok) {\n        return Promise.reject(new Error());\n      }\n\n      return response.json();\n    });\n};\n\nexport const getPosts = (): Promise<Post[]> => request('/posts');\n","import { request } from './api';\n\nexport const getComments = (): Promise<Comment[]> => request('/comments');\nexport const getPostComments = (postId: number) => {\n  return getComments()\n    .then(comments => comments.filter(comment => comment.postId === postId));\n};\n\nexport const deleteComment = (commentId: number) => request(`/comments/${commentId}`, { method: 'DELETE' });\n\nexport const createComment = (\n  postId: number,\n  name: string,\n  email: string,\n  body: string,\n): Promise<Comment> => request('/comments', {\n  method: 'POST',\n  headers: {\n    'Content-type': 'application/json; charset=UTF-8',\n  },\n  body: JSON.stringify({\n    postId,\n    name,\n    email,\n    body,\n  }),\n});\n","import React, { useEffect, useState } from 'react';\nimport { NewCommentForm } from '../NewCommentForm';\nimport './PostDetails.scss';\nimport { getPostDetails } from '../../api/posts';\nimport { getPostComments, deleteComment, createComment } from '../../api/comments';\n\ntype Props = {\n  selectedPostId: number;\n};\n\nexport const PostDetails: React.FC<Props> = ({ selectedPostId }) => {\n  const [postDetails, setPostDetails] = useState<Post | null>(null);\n  const [comments, setComments] = useState<Comment[]>([]);\n  const [visibleComments, setVisibleComments] = useState(true);\n\n  useEffect(() => {\n    getPostDetails(selectedPostId)\n      .then(postDetailsId => {\n        setPostDetails(postDetailsId);\n      });\n\n    getPostComments(selectedPostId)\n      .then(commentsPostId => {\n        setComments(commentsPostId);\n      });\n  }, [selectedPostId]);\n\n  const handleVisibleComments = () => {\n    setVisibleComments(currentState => !currentState);\n  };\n\n  const deleteCommentId = (commentId: number) => {\n    deleteComment(commentId);\n    setComments((currentCommets) => currentCommets.filter(comment => comment.id !== commentId));\n  };\n\n  const addComment = (name: string, email: string, body: string) => {\n    createComment(selectedPostId, name, email, body)\n      .then(createdComment => {\n        setComments(currentCommets => [...currentCommets, createdComment]);\n      });\n  };\n\n  return (\n    <div className=\"PostDetails\">\n      {postDetails && (\n        <>\n          <h2>Post details:</h2>\n          <section className=\"PostDetails__post\">\n            <p>{postDetails.body}</p>\n          </section>\n        </>\n      )}\n\n      <section className=\"PostDetails__comments\">\n        <button\n          type=\"button\"\n          className=\"button\"\n          onClick={handleVisibleComments}\n        >\n          { visibleComments ? `Hide ${comments.length} comments` : 'Show comments'}\n        </button>\n\n        { visibleComments && (\n          <ul className=\"PostDetails__list\">\n            { comments.map(comment => (\n              <li className=\"PostDetails__list-item\" key={comment.id}>\n                <button\n                  type=\"button\"\n                  className=\"PostDetails__remove-button button\"\n                  onClick={() => deleteCommentId(comment.id)}\n                >\n                  X\n                </button>\n                <p>{comment.body}</p>\n              </li>\n            ))}\n          </ul>\n        )}\n      </section>\n\n      <section>\n        <div className=\"PostDetails__form-wrapper\">\n          <NewCommentForm\n            addComment={addComment}\n          />\n        </div>\n      </section>\n    </div>\n  );\n};\n","import { request } from './api';\n\nexport const getUserPosts = (userId: number): Promise<Post[]> => request(`/posts?userId=${userId}`);\n\nexport const getPostDetails = (postId: number):Promise<Post> => request(`/posts/${postId}`);\n","import React, { useState, useEffect } from 'react';\nimport './App.scss';\nimport './styles/general.scss';\nimport { PostsList } from './components/PostsList';\nimport { PostDetails } from './components/PostDetails';\nimport { getPosts } from './api/api';\nimport { getUserPosts } from './api/posts';\n\nconst App: React.FC = () => {\n  const [posts, setPosts] = useState<Post[]>([]);\n  const [selectedUser, setSelectedUser] = useState(0);\n  const [selectedPostId, setselectedPostId] = useState(0);\n\n  useEffect(() => {\n    getPosts()\n      .then(allPosts => {\n        setPosts(allPosts);\n      });\n  }, []);\n\n  useEffect(() => {\n    if (selectedUser === 0) {\n      getPosts()\n        .then(allPosts => {\n          setPosts(allPosts);\n        });\n    } else {\n      getUserPosts(selectedUser)\n        .then(userPosts => {\n          setPosts(userPosts);\n        });\n    }\n  }, [selectedUser]);\n\n  const handleUserChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setSelectedUser(+event.target.value);\n  };\n\n  const handleSelectedPostId = (postId: number) => {\n    if (postId === selectedPostId) {\n      setselectedPostId(0);\n    } else {\n      setselectedPostId(postId);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <header className=\"App__header\">\n        <label htmlFor=\"selectUser\">\n          Select a user: &nbsp;\n          <select\n            className=\"App__user-selector\"\n            id=\"selectUser\"\n            name=\"selectedUser\"\n            value={selectedUser}\n            onChange={handleUserChange}\n          >\n            <option value=\"0\">All users</option>\n            <option value=\"1\">Leanne Graham</option>\n            <option value=\"2\">Ervin Howell</option>\n            <option value=\"3\">Clementine Bauch</option>\n            <option value=\"4\">Patricia Lebsack</option>\n            <option value=\"5\">Chelsey Dietrich</option>\n            <option value=\"6\">Mrs. Dennis Schulist</option>\n            <option value=\"7\">Kurtis Weissnat</option>\n            <option value=\"8\">Nicholas Runolfsdottir V</option>\n            <option value=\"9\">Glenna Reichert</option>\n            <option value=\"10\">Leanne Graham</option>\n          </select>\n        </label>\n      </header>\n\n      <main className=\"App__main\">\n        <div className=\"App__sidebar\">\n          <PostsList\n            posts={posts}\n            selectedPostId={selectedPostId}\n            onSelectedPostId={handleSelectedPostId}\n          />\n        </div>\n\n        <div className=\"App__content\">\n          { selectedPostId\n            ? (\n              <PostDetails\n                selectedPostId={selectedPostId}\n              />\n            )\n            : 'Post not selected'}\n        </div>\n      </main>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}